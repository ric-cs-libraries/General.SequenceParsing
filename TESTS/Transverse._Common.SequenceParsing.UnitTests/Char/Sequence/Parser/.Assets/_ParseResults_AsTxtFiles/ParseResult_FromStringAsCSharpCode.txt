{ParseResult: RootNode={RootNode: IsClosed=True; Elements(4)=[{Node: Id=1; ParentId=0; Depth=0; Block={CharBlock: type='Comm.MonoLig.'; StartDelimiter={CharBlockDelimiter: Delimiter='//'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; EndDelimiter={CharBlockDelimiter: Delimiter='
'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(0)}; ChunkStartMatching={ChunkMatching: StartIndex=0; EndIndex=1; Content(2)=`//`}; ChunkEndMatching={ChunkMatching: StartIndex=30; EndIndex=31; Content(2)=`
`}; IsClosed=True; Elements(1)=[{Leaf: Id=2; ParentId=1; Depth=1; StartIndex=2; EndIndex=29; Data(28)=' Ceci est un comm mono-ligne'}]},{Node: Id=3; ParentId=0; Depth=0; Block={CharBlock: type='/*...*/'; StartDelimiter={CharBlockDelimiter: Delimiter='/*'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; EndDelimiter={CharBlockDelimiter: Delimiter='*/'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(0)}; ChunkStartMatching={ChunkMatching: StartIndex=32; EndIndex=33; Content(2)=`/*`}; ChunkEndMatching={ChunkMatching: StartIndex=129; EndIndex=130; Content(2)=`*/`}; IsClosed=True; Elements(1)=[{Leaf: Id=4; ParentId=3; Depth=1; StartIndex=34; EndIndex=128; Data(95)=' Ceci est un commentaire 
   multilignes
   class pas { pris en compte car dans comm } .
   '}]},{Leaf: Id=5; ParentId=0; Depth=0; StartIndex=131; EndIndex=137; Data(7)='

   '},{Node: Id=6; ParentId=0; Depth=0; Block={CharBlock: type='CLASS {...}'; StartDelimiter={CharBlockDelimiter: Delimiter='class[ ]*[A-Z]+(
|[ ])*[{](
|[ ])*'; CaseSensitive=False; StringMatchingEvaluator=StringMatchingEvaluatorByRegExp}; EndDelimiter={CharBlockDelimiter: Delimiter='}'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(3)}; ChunkStartMatching={ChunkMatching: StartIndex=138; EndIndex=165; Content(28)=`class MaClasse {
  
      `}; ChunkEndMatching={ChunkMatching: StartIndex=360; EndIndex=360; Content(1)=`}`}; IsClosed=True; Elements(4)=[{Node: Id=7; ParentId=6; Depth=1; Block={CharBlock: type='Comm.MonoLig.'; StartDelimiter={CharBlockDelimiter: Delimiter='//'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; EndDelimiter={CharBlockDelimiter: Delimiter='
'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(0)}; ChunkStartMatching={ChunkMatching: StartIndex=166; EndIndex=167; Content(2)=`//`}; ChunkEndMatching={ChunkMatching: StartIndex=206; EndIndex=207; Content(2)=`
`}; IsClosed=True; Elements(1)=[{Leaf: Id=8; ParentId=7; Depth=2; StartIndex=168; EndIndex=205; Data(38)='Contenu de ma classe! class dans comm!'}]},{Leaf: Id=9; ParentId=6; Depth=1; StartIndex=208; EndIndex=215; Data(8)='
      '},{Node: Id=10; ParentId=6; Depth=1; Block={CharBlock: type='IF{...}'; StartDelimiter={CharBlockDelimiter: Delimiter='if[ ]*[(](.*)[)](
|[ ])*[{](
|[ ])*'; CaseSensitive=False; StringMatchingEvaluator=StringMatchingEvaluatorByRegExp}; EndDelimiter={CharBlockDelimiter: Delimiter='}'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=True; ExpectedInnerBlocks(3)}; ChunkStartMatching={ChunkMatching: StartIndex=216; EndIndex=243; Content(28)=`if (toto == 9) {

        `}; ChunkEndMatching={ChunkMatching: StartIndex=350; EndIndex=350; Content(1)=`}`}; IsClosed=True; Elements(4)=[{Node: Id=11; ParentId=10; Depth=2; Block={CharBlock: type='Comm.MonoLig.'; StartDelimiter={CharBlockDelimiter: Delimiter='//'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; EndDelimiter={CharBlockDelimiter: Delimiter='
'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(0)}; ChunkStartMatching={ChunkMatching: StartIndex=244; EndIndex=245; Content(2)=`//`}; ChunkEndMatching={ChunkMatching: StartIndex=258; EndIndex=259; Content(2)=`
`}; IsClosed=True; Elements(1)=[{Leaf: Id=12; ParentId=11; Depth=3; StartIndex=246; EndIndex=257; Data(12)='Un comm mono'}]},{Leaf: Id=13; ParentId=10; Depth=2; StartIndex=260; EndIndex=269; Data(10)='          '},{Node: Id=14; ParentId=10; Depth=2; Block={CharBlock: type='IF{...}'; StartDelimiter={CharBlockDelimiter: Delimiter='if[ ]*[(](.*)[)](
|[ ])*[{](
|[ ])*'; CaseSensitive=False; StringMatchingEvaluator=StringMatchingEvaluatorByRegExp}; EndDelimiter={CharBlockDelimiter: Delimiter='}'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=True; ExpectedInnerBlocks(3)}; ChunkStartMatching={ChunkMatching: StartIndex=270; EndIndex=314; Content(45)=`if (bidule < 5) 
          {

            `}; ChunkEndMatching={ChunkMatching: StartIndex=339; EndIndex=339; Content(1)=`}`}; IsClosed=True; Elements(2)=[{Node: Id=15; ParentId=14; Depth=3; Block={CharBlock: type='Comm.MonoLig.'; StartDelimiter={CharBlockDelimiter: Delimiter='//'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; EndDelimiter={CharBlockDelimiter: Delimiter='
'; CaseSensitive=True; StringMatchingEvaluator=StringMatchingEvaluatorByEquality}; SelfNestable=False; ExpectedInnerBlocks(0)}; ChunkStartMatching={ChunkMatching: StartIndex=315; EndIndex=316; Content(2)=`//`}; ChunkEndMatching={ChunkMatching: StartIndex=327; EndIndex=328; Content(2)=`
`}; IsClosed=True; Elements(1)=[{Leaf: Id=16; ParentId=15; Depth=4; StartIndex=317; EndIndex=326; Data(10)='C'est cool'}]},{Leaf: Id=17; ParentId=14; Depth=3; StartIndex=329; EndIndex=338; Data(10)='          '}]},{Leaf: Id=18; ParentId=10; Depth=2; StartIndex=340; EndIndex=349; Data(10)='

      '}]},{Leaf: Id=19; ParentId=6; Depth=1; StartIndex=351; EndIndex=359; Data(9)='


   '}]}]; ExpectedInnerBlocks(4)}}